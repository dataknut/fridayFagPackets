---
title: "GDP & emissions - degrowthing or decoupling?"
author: "Ben Anderson & Tom Rushby"
date: "`r Sys.time()`"
format: 
  html:
    self-contained: true
    toc: true
    code-fold: true
editor: visual
---

```{r}
#| label: setup
#| echo: false
#| warning: false
library(data.table)
library(here)
library(ggplot2)
library(kableExtra)
library(plotly)
library(skimr)
```

# Friday fagpackets

One of a [series](https://dataknut.github.io/fridayFagPackets/)...

# What's all this about de-growth?

\<sigh\>

A follow-up to [\@tom_rushby's tweet](https://twitter.com/tom_rushby/status/1577752402798821410)

Updated after [another by \@JKSteinberger](https://twitter.com/JKSteinberger/status/1587562447795167233)

# Data

Downloaded from the awesome [OurWorldInData](https://ourworldindata.org/grapher/co2-emissions-and-gdp?country=~GBR):

-   absolute and per capita GDP

-   absolute and per capita Greenhouse Gas emissions in two flavours:

    -   production ('territorial') and

    -   consumption

```{r}
#| label: loasdData
# fix
dt_abs <- data.table::fread(here::here("data", "co2-emissions-and-gdp.csv"))
dt_pc <- data.table::fread(here::here("data", "co2-emissions-and-gdp-per-capita.csv"))

```

Where do we care about?

> Change these at will and for your purposes...
>
> This would make a really nice [shiny app](https://shiny.rstudio.com/gallery/)

```{r}
#| label: selectEntities
entities_of_interest <- c("United Kingdom", "United States", "New Zealand", 
                          "China", "India", "Norway", "Kenya", "Jamaica")

# check valid
t <- dt_pc[Entity %in% entities_of_interest, .(nObs = .N, 
                                           meanAnnualPerCapTerr = mean(`Annual CO2 emissions (per capita)`, na.rm = TRUE),
                                           meanAnnualPerCapCons = mean(`Annual consumption-based CO2 emissions (per capita)`,na.rm = TRUE),
                                           meanAnnualGDPperCap = mean(`GDP per capita, PPP (constant 2017 international $)`,na.rm = TRUE)), keyby = .(Entity)]

knitr::kable(t, digits = 2) %>%
  kable_styling()

```

# Absolute GDP & emissions

## Absolute production emissions

First we'll try production ('territorial') emissions. We are not controlling for population size so countries with large populations will visually dominate.

```{r}
#| label: fig-SelectedProdPlot
#| fig-cap: GDP vs production emissions over time (selected entities).
#| warning: false

plotDT <- dt_abs[Entity %in% entities_of_interest]

ggplot2::ggplot(plotDT, aes(x = as.numeric(`GDP, PPP (constant 2017 international $)`)/1000000000, 
                            y = as.numeric(`Annual CO2 emissions`)/1000000,
                            colour = Entity,
                            alpha = Year)) +
  geom_point() +
  labs(y = "Annual CO2 emissions (production-based, gT)",
       x = "GDP $bn (constant 2017 $)")
```

## Absolute consumption emissions

Note that 2020 consumption-based emissions data is missing so you don't see the 2020 COVID-19 downtick. Absolute emissions are falling in some places even as GDP is still increasing...

```{r}
#| label: fig-SelectedConsPlot
#| fig-cap: GDP vs consumotion emissions over time (selected entities).
#| warning: false
plotDT <- dt_abs[Entity %in% entities_of_interest]

ggplot2::ggplot(plotDT, aes(x = as.numeric(`GDP, PPP (constant 2017 international $)`)/1000000000, 
                            y = as.numeric(`Annual consumption-based CO2 emissions`)/1000000,
                            colour = Entity,
                            alpha = Year)) +
  geom_point() +
  labs(y = "Annual CO2 emissions (consumption-based, gT)",
       x = "GDP $bn (constant 2017 $)")
```

# Per capita GDP & emissions

Since we'll be dividing everything pairwise by the same denominator, nothing much about the shapes should change... but the plots should be much clearer as we've removed the affect of population size. Countries with large populations will no longer visually dominate...

## Production emissions

First we'll try production emissions. @fig-SelectedProdPlotPcc shows change in this metric over time. Some interesting changes in direction (and otherwise)... basically they all need to be inverse U shaped, i.e. heading for y = 0.

```{r}
#| label: fig-SelectedProdPlotPcc
#| fig-cap: GDP vs production emissions over time (selected entities)
#| warning: false

entities_of_interest <- c(entities_of_interest, "World")

plotDT <- dt_pc[Entity %in% entities_of_interest]

p <-ggplot2::ggplot(plotDT, aes(x = as.numeric(`GDP per capita, PPP (constant 2017 international $)`), 
                            y = as.numeric(`Annual CO2 emissions (per capita)`),
                            colour = Entity,
                            alpha = Year)) +
  geom_point() +
  geom_line() +
  labs(y = "Annual CO2 emissions per capita (production-based, T)",
       x = "GDP per capita (constant 2017 $)")

p
```

Let's repeat that. Hover over the dots to see which is which. This is [plotly](https://plotly.com/ggplot2/) in action #YMMV.

```{r}
#| label: fig-SelectedProdPlotPccPlotyly
#| fig-cap: GDP vs production emissions over time (selected entities)
#| warning: false

p <-ggplot2::ggplot(plotDT, aes(x = as.numeric(`GDP per capita, PPP (constant 2017 international $)`), 
                            y = as.numeric(`Annual CO2 emissions (per capita)`),
                            colour = Entity)) +
  geom_point() +
  geom_line() +
  labs(y = "Annual CO2 emissions per capita (production-based, T)",
       x = "GDP per capita (constant 2017 $)")

plotly::ggplotly(p)
```

Now let's have a look at all the countries but without the lines.

Quite interesting, Qatar for example. Perfect place for a winter sport's World Cup. Trinidad and Tobago also worth a look. Macao looks like the place to be?

```{r}
#| label: fig-ProdPlotPcc
#| fig-cap: GDP vs production emissions over time (all entities)
#| warning: false

#plotDT <- dt_pc[Entity %in% entities_of_interest]
plotDT <- dt_pc # for fun

p <- ggplot2::ggplot(plotDT, aes(x = as.numeric(`GDP per capita, PPP (constant 2017 international $)`), 
                            y = as.numeric(`Annual CO2 emissions (per capita)`),
                            colour = Entity,
                            alpha = Year)) +
  geom_point() +
  theme(legend.position = "none") +
  labs(y = "Annual CO2 emissions per capita (production-based, T)",
       x = "GDP per capita (constant 2017 $)")

plotly::ggplotly(p)
```

## Consumption emissions

Next we'll try consumption emissions. This is shown in @fig-SelectedConsPlotPcc.

Note that 2020 consumption-based emissions data is missing so you don't see the down-tick.

```{r}
#| label: fig-SelectedConsPlotPcc
#| fig-cap: GDP vs consumption emissions over time (selected entities).
#| warning: false
plotDT <- dt_pc[Entity %in% entities_of_interest]

ggplot2::ggplot(plotDT, aes(x = as.numeric(`GDP per capita, PPP (constant 2017 international $)`), 
                            y = as.numeric(`Annual consumption-based CO2 emissions (per capita)`),
                            colour = Entity,
                            alpha = Year)) +
  geom_point() +
  geom_line() +
  labs(y = "Annual CO2 emissions per capita (consumption-based, T)",
       x = "GDP per capita (constant 2017 $)")
```

Let's repeat that for all countries. Hover over the dots to see which is which #YMMV.

Well this time Luxembourg is out in the lead...

```{r}
#| label: fig-ConsPlotPcc
#| fig-cap: GDP vs consumption emissions over time (all entities)
#| warning: false

#plotDT <- dt_pc[Entity %in% entities_of_interest]
plotDT <- dt_pc # for fun

p <- ggplot2::ggplot(plotDT, aes(x = as.numeric(`GDP per capita, PPP (constant 2017 international $)`), 
                            y = as.numeric(`Annual consumption-based CO2 emissions (per capita)`),
                            colour = Entity,
                            alpha = Year)) +
  geom_point() +
  theme(legend.position = "none") +
  labs(y = "Annual CO2 emissions per capita (consumption-based, T)",
       x = "GDP per capita (constant 2017 $)")

plotly::ggplotly(p)
```

# Efficiency

How about looking at efficiency: gC02e per \$ GDP?

Following <https://timjackson.org.uk/earth-vs-growth/> ...

```{r}
#| label: selectProduction
dt_abs[, `Emissions intensity (production-based)` := `Annual CO2 emissions`/`GDP, PPP (constant 2017 international $)`*1000*1000]
```

```{r}
#| label: selectAndPlotProduction
plotDT <- dt_abs[Entity %in% entities_of_interest]

ggplot2::ggplot(plotDT, aes(Year, `Emissions intensity (production-based)`, colour = Entity)) +
  geom_line() +
  labs(y = "gC02 per $ GDP",
       colour = "Country",
       caption = "Data: https://ourworldindata.org")
```

For the UK, let's say c. 300g/\$ in 1995 reducing to 200g/\$ in 2010. So 15 years. To go from 200g/\$ to zero at the same rate would take approx. 30 years. So net-zero by 2050?

Regardless of whether that aligns with [science-based targets](https://sciencebasedtargets.org/how-it-works) (i.e. absolute zero by 2044) ... what happens if the economy grows ... by say 2-3% per year? ... would that force total emissions up (fixed intensity) or result in efficiency gains (lower intensity)?

```{r}
#| label: selectCons
dt_abs[, `Emissions intensity (consumption-based)` := `Annual consumption-based CO2 emissions`/`GDP, PPP (constant 2017 international $)`*1000*1000]
```

```{r}
#| label: selectAndPlotConsumption
plotDT <- dt_abs[Entity %in% entities_of_interest]

ggplot2::ggplot(plotDT, aes(Year, `Emissions intensity (consumption-based)`, colour = Entity)) +
  geom_line() +
  labs(y = "gC02 per $ GDP")
```

# Whom do we love?

[quarto](https://quarto.org/)

[data.table](https://www.rdocumentation.org/packages/data.table/versions/1.14.2)

[ggplot2](https://www.rdocumentation.org/packages/ggplot2/versions/3.3.6)

[here](https://www.rdocumentation.org/packages/here/versions/1.0.1)

[skimr](https://www.rdocumentation.org/packages/skimr/versions/2.1.4)

# Data descriptions

Check

Skim the absolute data:

```{r}
#| label: skimAbs
skimr::skim(dt_abs)
```

Skim the per capita data

```{r}
#| label: skimPC
skimr::skim(dt_pc)
```

```{r}
#| label: runToHere
# hidden chunk
```
